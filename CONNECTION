import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.Button;
import javafx.scene.layout.StackPane;
import javafx.stage.Stage;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class DatabaseConnectionApp extends Application {

    private static final String URL = "jdbc:mysql://localhost:3306/LimkokwingAcademicReporting";
    private static final String USER = "yourUsername"; // Replace with your MySQL username
    private static final String PASSWORD = "yourPassword"; // Replace with your MySQL password

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("JavaFX MySQL Database Connection");

        Button connectButton = new Button("Connect to Database");
        connectButton.setOnAction(e -> {
            try {
                Connection connection = connectToDatabase();
                if (connection != null) {
                    showAlert(AlertType.INFORMATION, "Connection Successful!", "Connected to MySQL database.");
                } else {
                    showAlert(AlertType.ERROR, "Connection Failed", "Could not connect to the database.");
                }
            } catch (SQLException ex) {
                showAlert(AlertType.ERROR, "Connection Error", ex.getMessage());
            }
        });

        StackPane root = new StackPane();
        root.getChildren().add(connectButton);
        primaryStage.setScene(new Scene(root, 300, 200));
        primaryStage.show();
    }

    private Connection connectToDatabase() throws SQLException {
        try {
            // Load MySQL JDBC Driver
            Class.forName("com.mysql.cj.jdbc.Driver");
            return DriverManager.getConnection(URL, USER, PASSWORD);
        } catch (ClassNotFoundException e) {
            showAlert(AlertType.ERROR, "Driver Error", "MySQL JDBC Driver not found.");
            e.printStackTrace();
            return null;
        }
    }

    private void showAlert(AlertType alertType, String title, String message) {
        Alert alert = new Alert(alertType);
        alert.setTitle(title);
        alert.setContentText(message);
        alert.showAndWait();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
